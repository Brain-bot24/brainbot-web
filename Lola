<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Brainbot</title>
    <style>
        body {
            font-family: Geometr706 BlkCn BT, sans-serif;
            background-color: hsl(351, 100%, 6%);
            margin: 0;
            padding: 0;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 10px;
        }
        .chat {
            background-color: hsl(0, 0%, 0%);
            border-radius: 5px;
            box-shadow: 0 2px 5px #ffffff;
            overflow: hidden;
        }
        .chat-header {
            background-color: hsla(213, 100%, 4%, 0.796);
            color: hsl(0, 0%, 100%);
            padding: 10px;
        }
        .chat-body {
            padding: 12px;
            height: 300px;
            overflow-y: scroll;
        }
        .message {
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
            max-width: 70%;
            clear: both;
        }
        .user-message {
            background-color: hsla(213, 100%, 4%, 0.796);
            color: #fff;
            float: right;
        }
        .bot-message {
            background-color: hsla(213, 100%, 4%, 0.796);
            color: hsl(0, 0%, 100%);
            float: left;
        }
        .chat-container {
            display: flex;
            align-items: center;
            padding: 10px;
        }
        .chat-input {
            flex-grow: 1;
            padding: 12px;
            border: none;
            border-top: 1px solid #ccc;
        }
        .chat-btn {
            background-color: hsla(213, 100%, 4%, 0.796);
            color: #fff;
            border: none;
            padding: 12px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="chat">
            <div class="chat-header">Lola</div>
            <div class="chat-body" id="chat-body"></div>
            <div class="chat-container">
                <input type="text" id="user-input" class="chat-input" placeholder="Escribir tu mensaje aquí...">
                <button id="send-btn" class="chat-btn">Enviar</button>
            </div>
        </div>
        <button id="start-record" class="chat-btn">Iniciar escucha</button>
    </div>

    <script>
        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
        recognition.continuous = true;
        recognition.interimResults = false;
        let isListening = false;
        let wakeWordDetected = false;

        recognition.onresult = async function(event) {
            const userInput = event.results[event.results.length - 1][0].transcript.toLowerCase();
            console.log("Escuchado: ", userInput);
            addMessageToChat(userInput, "user");

            if (userInput.includes("adiós lola")) {
                addMessageToChat("Adiós, hasta luego.", "bot");
                textToSpeech("Adiós, hasta luego.");
                recognition.stop();
                isListening = false;
                return;
            }

            if (!wakeWordDetected && userInput.includes("hola lola")) {
                wakeWordDetected = true;
                addMessageToChat("Hola, ¿en qué puedo ayudarte?", "bot");
                textToSpeech("Hola, ¿en qué puedo ayudarte?");
                return;
            }

            if (wakeWordDetected) {
                const response = await query(userInput);
                addMessageToChat(response, "bot");
                textToSpeech(response);
                wakeWordDetected = false; // Reinicia el estado después de procesar la entrada
            }
        };

        function textToSpeech(text) {
            const utterance = new SpeechSynthesisUtterance(text);
            utterance.lang = 'es-ES';
            speechSynthesis.speak(utterance);
        }

        recognition.onerror = function(event) {
            console.error("Error en el reconocimiento de voz: ", event.error);
        };

        document.getElementById("start-record").addEventListener("click", function() {
            if (!isListening) {
                isListening = true;
                recognition.start();
                console.log("Iniciando escucha...");
            } else {
                recognition.stop();
                isListening = false;
                console.log("Deteniendo escucha...");
            }
        });

        async function query(userInput) {
            try {
                const response = await fetch("https://www.stack-ai.com/form/29c58972-2be9-4c25-b55e-da5a5f5eee5f/b828b261-552d-4a78-aa90-fe338d665f3b/66ef65ca6f233a8bb63deb9a", {
                    method: "POST",
                    headers: {
                        'Authorization': 'Bearer b828b261-552d-4a78-aa90-fe338d665f3b',
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ "in-0": userInput }),
                });

                if (!response.ok) {
                    console.error(`Error en la consulta: ${response.status} ${response.statusText}`);
                    throw new Error(`Error en la consulta: ${response.statusText}`);
                }

                const result = await response.json();
                return result["out-0"];
            } catch (error) {
                console.error("Error en la consulta a Stack AI: ", error);
                return "Lo siento, ocurrió un error al procesar tu solicitud.";
            }
        }

        function addMessageToChat(message, sender) {
            const chatBody = document.getElementById("chat-body");
            const messageElement = document.createElement("div");
            messageElement.textContent = message;
            messageElement.classList.add("message", sender === "user" ? "user-message" : "bot-message");
            chatBody.appendChild(messageElement);
            chatBody.scrollTop = chatBody.scrollHeight;
        }

        document.getElementById("send-btn").addEventListener("click", sendMessage);
        document.getElementById("user-input").addEventListener("keyup", function(event) {
            if (event.key === "Enter") {
                sendMessage();
            }
        });

        function sendMessage() {
            const userInput = document.getElementById("user-input").value;
            if (userInput.trim() === "") return;

            addMessageToChat(userInput, "user");

            query(userInput).then(response => {
                addMessageToChat(response, "bot");
                textToSpeech(response);
            });

            document.getElementById("user-input").value = "";
        }
    </script>
</body>
</html>
